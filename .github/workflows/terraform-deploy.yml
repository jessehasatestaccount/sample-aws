name: "terraform-deploy"
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test-deployment:
    name: "Run test Terraform deployment"
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Build infrastructure
        working-directory: infrastructure
        run: |
          aws ec2 create-key-pair --key-name ci-$GITHUB_RUN_ID
          terraform init
          terraform apply -auto-approve -var "key_name=ci-$GITHUB_RUN_ID" -var "env_name=ci-$GITHUB_RUN_ID"

      - name: Deploy Kubernetes resources
        working-directory: kubernetes
        run: |
          terraform init
          terraform apply -auto-approve -var "cluster_name=ci-$GITHUB_RUN_ID-eks-cluster"

      - name: Tear down Kubernetes resources
        working-directory: kubernetes
        run: |
          terraform destroy -auto-approve -var "cluster_name=ci-$GITHUB_RUN_ID-eks-cluster"

      - name: Tear down infrastructure
        if: ${{ always() }}
        working-directory: infrastructure
        run: |
          terraform destroy -auto-approve -var "key_name=ci-$GITHUB_RUN_ID" -var "env_name=ci-$GITHUB_RUN_ID"
          aws ec2 delete-key-pair --key-name ci-$GITHUB_RUN_ID
